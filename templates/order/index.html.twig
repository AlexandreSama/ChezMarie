{% extends 'base.html.twig' %}

{% block title %}Valider votre commande{% endblock %}

{% block body %}
<script src="https://www.paypal.com/sdk/js?client-id={{ paypalClientId }}&currency=EUR"></script>
<div class="container mt-5">
    <h1 class="text-center mb-4">Valider votre commande</h1>
    <div class="row justify-content-center">
        <div class="col-lg-6">
            {{ form_start(form) }}
            {{ form_row(form.customerName) }}
            {{ form_row(form.customerFirstName) }}
            {{ form_row(form.customerAdress) }}
            {{ form_row(form.customerTown) }}
            {{ form_row(form.desiredPickupDateTime) }}
            {{ form_widget(form.stripeToken, {'id': 'stripe-token-id'}) }}
            <div class="card border-0 mt-4" style="box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2); border-radius: 30px;">
                <div class="card-body">
                    {% for message in app.flashes('success') %}
                    <div class="alert alert-success text-center mb-4">
                        {{ message }}
                    </div>
                    {% endfor %}

                    <div id='checkout-form'>
                        <label for="card-element">Payer avec Stripe</label>
                        <p>Montant total à payer : {{ fullPrice }} €</p>
                        <div id="card-element" class="form-control"></div>
                        {{ form_row(form.submit, { 'id': 'pay-btn' }) }}
                    </div>
                </div>
            </div>
            <h4>Ou payer avec Paypal</h4>
            <div id="paypal-button-container"></div>
            {{ form_end(form) }}
        </div>
    </div>
</div>

<script src="https://js.stripe.com/v3/"></script>
<script>
    var stripe = Stripe("{{ stripe_key }}");
    var elements = stripe.elements();
    var cardElement = elements.create('card');
    cardElement.mount('#card-element');
    var form = document.querySelector('form');

    function createToken() {
        document.getElementById("pay-btn").disabled = true;
        stripe.createToken(cardElement).then(function (result) {
            if (result.error) {
                document.getElementById("pay-btn").disabled = false;
                alert(result.error.message);
            } else {
                // Set the token as the value for the hidden input
                document.getElementById("stripe-token-id").value = result.token.id;
                // Submit the form
                form.submit();
            }
        });
    }

    form.addEventListener("submit", function (event) {
        event.preventDefault();
        createToken();
    });

    paypal.Buttons({
        createOrder: function (data, actions) {
            return actions.order.create({
                purchase_units: [{
                    amount: {
                        value: '{{ fullPrice }}'
                    }
                }]
            });
        },
        onApprove: function (data, actions) {
            return actions.order.capture().then(function (details) {
                // Construire l'URL de redirection pour la route 'payment_success' avec l'orderID
                const redirectUrl = new URL("{{ path('payment_success') }}", window.location.origin);
                redirectUrl.searchParams.append("paymentID", data.orderID);

                // Rediriger l'utilisateur vers la page de succès
                window.location.href = redirectUrl.href;
            });
        },
        onCancel: function (data) {
            // Rediriger l'utilisateur vers la page d'annulation
            window.location.href = "{{ path('payment_cancel') }}";
        }
    }).render('#paypal-button-container');
</script>
{% endblock %}